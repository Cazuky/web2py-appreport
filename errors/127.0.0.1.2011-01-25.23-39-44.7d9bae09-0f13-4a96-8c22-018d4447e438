(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/lucasdavila/central/ws/web2py/src/web2pydev/applications/plugin_appreport/controllers/person.py'
p4
sS'code'
p5
S'# coding: utf8\n\ndef create():\n\n    form = crud.create(person)\n    form_favs = crud.create(favorite_music)\n    persons = crud.select(person, person.id > 0)\n\n    return dict(form = form, form_favs = form_favs, persons = persons)\n    \n\ndef simple_report():\n\n    form = plugin_appreport.REPORTFORM(table=person)\n\n    if form.accepts(request.vars, session):\n        return plugin_appreport.REPORT(table = person, title = \'List of persons\', filter = dict(form.vars))\n\n    return dict(form = form)\n    \ndef complex_report():\n\n    form = plugin_appreport.REPORTFORM(table=person)\n\n    if form.accepts(request.vars, session):\n        persons = db(form.prep_filter(filter = dict(form.vars))).select()\n        html = response.render(\'person/report_persons.html\', dict(persons = persons))\n        return plugin_appreport.REPORT(html = html, title = \'List of persons\')\n\n    return dict(form = form)\n\n\n\ndef custom_report():\n    \n    html = """<html>\n                <body>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Author</th>\n                                <th>Email</th>\n                                <th>Twitter</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>Lucas Davila</td>\n                                <td>lucassdvl@gmail.com</td>\n                                <td>@lucadavila</td>                                \n                            </tr>\n                        </tbody>\n                    </table>\n                </body>\n            </html>\n    """\n    return plugin_appreport.REPORT(html = html, title = \'my custom report using the plugin appreport\')\n\nresponse._vars=response._caller(create)\n'
p6
sS'snapshot'
p7
(dp8
S'exception'
p9
(dp10
S'__hash__'
p11
S"<method-wrapper '__hash__' of exceptions.KeyError object>"
p12
sS'__setattr__'
p13
S"<method-wrapper '__setattr__' of exceptions.KeyError object>"
p14
sS'__reduce_ex__'
p15
S'<built-in method __reduce_ex__ of exceptions.KeyError object>'
p16
sS'__getslice__'
p17
S"<method-wrapper '__getslice__' of exceptions.KeyError object>"
p18
sS'__getitem__'
p19
S"<method-wrapper '__getitem__' of exceptions.KeyError object>"
p20
sS'__setstate__'
p21
S'<built-in method __setstate__ of exceptions.KeyError object>'
p22
sS'__reduce__'
p23
S'<built-in method __reduce__ of exceptions.KeyError object>'
p24
sS'__str__'
p25
S"<method-wrapper '__str__' of exceptions.KeyError object>"
p26
sS'__format__'
p27
S'<built-in method __format__ of exceptions.KeyError object>'
p28
sS'__getattribute__'
p29
S"<method-wrapper '__getattribute__' of exceptions.KeyError object>"
p30
sS'__class__'
p31
S"<type 'exceptions.KeyError'>"
p32
sS'__unicode__'
p33
S'<built-in method __unicode__ of exceptions.KeyError object>'
p34
sS'__delattr__'
p35
S"<method-wrapper '__delattr__' of exceptions.KeyError object>"
p36
sS'__subclasshook__'
p37
S'<built-in method __subclasshook__ of type object>'
p38
sS'__repr__'
p39
S"<method-wrapper '__repr__' of exceptions.KeyError object>"
p40
sS'args'
p41
S"('person.name',)"
p42
sS'__dict__'
p43
S'{}'
p44
sS'__sizeof__'
p45
S'<built-in method __sizeof__ of exceptions.KeyError object>'
p46
sS'__doc__'
p47
S"'Mapping key not found.'"
p48
sS'__init__'
p49
S"<method-wrapper '__init__' of exceptions.KeyError object>"
p50
sS'__new__'
p51
S'<built-in method __new__ of type object>'
p52
ssS'evalue'
p53
S"'person.name'"
p54
sS'request'
p55
(dp56
S'function'
p57
S"'create'"
p58
sS'body'
p59
S'<cStringIO.StringO object>'
p60
sS'wsgi'
p61
S"<Storage {'start_response': <function <lambda> a...>, 'HTTP_ACCEPT_ENCODING': 'gzip,deflate,sdch'}}>"
p62
sS'extension'
p63
S"'html'"
p64
sS'vars'
p65
S'<Storage {}>'
p66
sS'cid'
p67
S'None'
p68
sS'url'
p69
S'<gluon.html.XML object>'
p70
sS'raw_extension'
p71
S'None'
p72
sg41
S'[]'
p73
sS'controller'
p74
S"'person'"
p75
sS'cookies'
p76
S"<SimpleCookie: session_id_admin='127.0.0.1-ab65c...'127.0.0.1-3fb54433-9a7e-4167-b09f-f0891a2471ca'>"
p77
sS'application'
p78
S"'plugin_appreport'"
p79
sS'ajax'
p80
S'False'
p81
sS'client'
p82
S"'127.0.0.1'"
p83
sS'env'
p84
S"<Storage {'wsgi_multithread': True, 'debugging':... 'wsgi_run_once': False, 'remote_port': '56747'}>"
p85
sS'raw_args'
p86
S'None'
p87
sS'get_vars'
p88
S'<Storage {}>'
p89
sS'folder'
p90
S"'/home/lucasdavila/central/ws/web2py/src/web2pydev/applications/plugin_appreport/'"
p91
sS'now'
p92
S'datetime.datetime(2011, 1, 25, 23, 39, 44, 37967)'
p93
sS'post_vars'
p94
S'<Storage {}>'
p95
ssS'frames'
p96
(lp97
(dp98
S'file'
p99
S'/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/restricted.py'
p100
sS'dump'
p101
(dp102
S'environment'
p103
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, 'CRYPT': <class 'gluon.validators.CRYPT'>, ...}"
p104
sS'ccode'
p105
S'<code object <module> at 0x9c4d920, file "/home/.../plugin_appreport/controllers/person.py", line 3>'
p106
ssS'lnum'
p107
I188
sS'lines'
p108
(dp109
I192
S'        # XXX Show exception in Wing IDE if running in debugger'
p110
sI183
S'        if type(code) == types.CodeType:'
p111
sI184
S'            ccode = code'
p112
sI185
S'        else:'
p113
sI186
S'            ccode = compile2(code,layer)'
p114
sI187
S''
sI188
S'        exec ccode in environment'
p115
sI189
S'    except HTTP:'
p116
sI190
S'        raise'
p117
sI191
S'    except Exception:'
p118
ssS'call'
p119
S'(code="# coding: utf8\\n\\ndef create():\\n\\n    form = crud.c...eport\')\\n\\nresponse._vars=response._caller(create)\\n", environment={\'A\': <class \'gluon.html.A\'>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, \'CLEANUP\': <class \'gluon.validators.CLEANUP\'>, \'CODE\': <class \'gluon.html.CODE\'>, \'CRYPT\': <class \'gluon.validators.CRYPT\'>, ...}, layer=\'/home/lucasdavila/central/ws/web2py/src/web2pyde...plications/plugin_appreport/controllers/person.py\')'
p120
sS'func'
p121
S'restricted'
p122
sa(dp123
g99
S'/home/lucasdavila/central/ws/web2py/src/web2pydev/applications/plugin_appreport/controllers/person.py'
p124
sg101
(dp125
sg107
I59
sg108
(dp126
I48
S'                                <td>Lucas Davila</td>'
p127
sI49
S'                                <td>lucassdvl@gmail.com</td>'
p128
sI50
S'                                <td>@lucadavila</td>'
p129
sI51
S'                            </tr>'
p130
sI52
S'                        </tbody>'
p131
sI53
S'                    </table>'
p132
sI54
S'                </body>'
p133
sI55
S'            </html>'
p134
sI56
S'    """'
p135
sI57
S"    return plugin_appreport.REPORT(html = html, title = 'my custom report using the plugin appreport')"
p136
ssg119
S'()'
p137
sg121
S'<module>'
p138
sa(dp139
g99
S'/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/globals.py'
p140
sg101
(dp141
S'self'
p142
S'undefined'
p143
sS'f'
S'<function create>'
p144
ssg107
I95
sg108
(dp145
I96
S'        self._view_environment = None'
p146
sI97
S'        self._custom_commit = None'
p147
sI98
S'        self._custom_rollback = None'
p148
sI99
S''
sI90
S"        self.flash = ''           # used by the default view layout"
p149
sI91
S'        self.meta = Storage()     # used by web2py_ajax.html'
p150
sI92
S'        self.menu = []            # used by the default view layout'
p151
sI93
S'        self.files = []           # used by web2py_ajax.html'
p152
sI94
S'        self._vars = None'
p153
sI95
S'        self._caller = lambda f: f()'
p154
ssg119
S'(f=<function create>)'
p155
sg121
S'<lambda>'
p156
sa(dp157
g99
S'/home/lucasdavila/central/ws/web2py/src/web2pydev/applications/plugin_appreport/controllers/person.py'
p158
sg101
(dp159
S'global crud'
p160
S'<gluon.tools.Crud object>'
p161
sS'crud.create'
p162
S'<bound method Crud.create of <gluon.tools.Crud object>>'
p163
sS'global favorite_music'
p164
S"<Table {'ALL': <gluon.dal.SQLALL object at 0x9c2...pplications/plugin_appreport/databases/sql.log'}>"
p165
sS'form_favs'
p166
g143
ssg107
I6
sg108
(dp167
I2
S''
sI3
S'def create():'
p168
sI4
S''
sI5
S'    form = crud.create(person)'
p169
sI6
S'    form_favs = crud.create(favorite_music)'
p170
sI7
S'    persons = crud.select(person, person.id > 0)'
p171
sI8
S''
sI9
S'    return dict(form = form, form_favs = form_favs, persons = persons)'
p172
sI10
S''
sI11
S''
ssg119
S'()'
p173
sg121
S'create'
p174
sa(dp175
g99
S'/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/tools.py'
p176
sg101
(dp177
S'deletable'
p178
g143
sS'builtinFalse'
p179
g81
ssg107
I2911
sg108
(dp180
I2912
S'            )'
p181
sI2913
S''
sI2914
S'    def read(self, table, record):'
p182
sI2915
S'        if not (isinstance(table, self.db.Table) or table in self.db.tables) \\'
p183
sI2906
S'            next=next,'
p184
sI2907
S'            onvalidation=onvalidation,'
p185
sI2908
S'            onaccept=onaccept,'
p186
sI2909
S'            log=log,'
p187
sI2910
S'            message=message,'
p188
sI2911
S'            deletable=False,'
p189
ssg119
S"(self=<gluon.tools.Crud object>, table=<Table {'ALL': <gluon.dal.SQLALL object at 0x9c2...pplications/plugin_appreport/databases/sql.log'}>, next=None, onvalidation=<Storage {}>, onaccept=<Storage {}>, log='Record %(id)s created', message='Record Created')"
p190
sg121
g174
sa(dp191
g99
S'/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/tools.py'
p192
sg101
(dp193
S'formstyle'
p194
g143
sS'self'
p195
S'<gluon.tools.Crud object>'
p196
sS'self.settings'
p197
S"<Storage {'showid': False, 'delete_onaccept': <S...ble': True, 'create_onvalidation': <Storage {}>}>"
p198
sS'self.settings.formstyle'
p199
S"'table3cols'"
p200
ssg107
I2827
sg108
(dp201
I2822
S'            showid=self.settings.showid,'
p202
sI2823
S'            submit_button=self.messages.submit_button,'
p203
sI2824
S'            delete_label=self.messages.delete_label,'
p204
sI2825
S'            deletable=deletable,'
p205
sI2826
S'            upload=self.settings.download_url,'
p206
sI2827
S'            formstyle=self.settings.formstyle'
p207
sI2828
S'            )'
p208
sI2829
S'        self.accepted = False'
p209
sI2830
S'        self.deleted = False'
p210
sI2831
S'        captcha = self.settings.update_captcha or \\'
p211
ssg119
S"(self=<gluon.tools.Crud object>, table=<Table {'ALL': <gluon.dal.SQLALL object at 0x9c2...pplications/plugin_appreport/databases/sql.log'}>, record=None, next=None, onvalidation=<Storage {}>, onaccept=<Storage {}>, ondelete=<Storage {}>, log='Record %(id)s created', message='Record Created', deletable=False)"
p212
sg121
S'update'
p213
sa(dp214
g99
S'/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/sqlhtml.py'
p215
sg101
(dp216
S'default'
p217
S'None'
p218
sS'self.widgets.options.widget'
p219
S'<function widget>'
p220
sS'self'
p221
S'<gluon.sqlhtml.SQLFORM object>'
p222
sS'inp'
p223
g143
sS'self.widgets'
p224
S"<Storage {'multiple': <class 'gluon.sqlhtml.Mult...ss 'gluon.sqlhtml.OptionsWidget'>, 'blob': None}>"
p225
sS'field'
p226
S'<gluon.dal.Field object>'
p227
sS'self.widgets.options'
p228
S"<class 'gluon.sqlhtml.OptionsWidget'>"
p229
ssg107
I808
sg108
(dp230
I803
S"                    inpval = 'checked'"
p231
sI804
S'                else:'
p232
sI805
S"                    inpval = ''"
p233
sI806
S'            elif OptionsWidget.has_options(field):'
p234
sI807
S'                if not field.requires.multiple:'
p235
sI808
S'                    inp = self.widgets.options.widget(field, default)'
p236
sI809
S'                else:'
p237
sI810
S'                    inp = self.widgets.multiple.widget(field, default)'
p238
sI811
S'                if fieldname in keepopts:'
p239
sI812
S"                    inpval = TAG[''](*inp.components)"
p240
ssg119
S"(self=<gluon.sqlhtml.SQLFORM object>, table=<Table {'ALL': <gluon.dal.SQLALL object at 0x9c2...pplications/plugin_appreport/databases/sql.log'}>, record=None, deletable=False, linkto=None, upload=<gluon.html.XML object>, fields=['id', 'person', 'title', 'artist'], labels=None, col3={}, submit_button='Submit', delete_label='Check to delete:', showid=False, readonly=False, comments=True, keepopts=[], ignore_rw=False, record_id=None, formstyle='table3cols', buttons=['submit'], **attributes={'hidden': {'_next': None}})"
p241
sg121
g49
sa(dp242
g99
S'/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/sqlhtml.py'
p243
sg101
(dp244
S'].options'
p245
g143
sS'requires'
p246
S'[<gluon.validators.IS_IN_DB object>]'
p247
sS'options'
p248
g143
ssg107
I206
sg108
(dp249
I201
S'        requires = field.requires'
p250
sI202
S'        if not isinstance(requires, (list, tuple)):'
p251
sI203
S'            requires = [requires]'
p252
sI204
S'        if requires:'
p253
sI205
S"            if hasattr(requires[0], 'options'):"
p254
sI206
S'                options = requires[0].options()'
p255
sI207
S'            else:'
p256
sI208
S"                raise SyntaxError, 'widget cannot determine options of %s' \\"
p257
sI209
S'                    % field'
p258
sI210
S'        opts = [OPTION(v, _value=k) for (k, v) in options]'
p259
ssg119
S'(field=<gluon.dal.Field object>, value=None, **attributes={})'
p260
sg121
S'widget'
p261
sa(dp262
g99
S'/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/validators.py'
p263
sg101
(dp264
S'self'
p265
S'<gluon.validators.IS_IN_DB object>'
p266
sS'self.build_set'
p267
S'<bound method IS_IN_DB.build_set of <gluon.validators.IS_IN_DB object>>'
p268
ssg107
I427
sg108
(dp269
I422
S'            self.labels = [self.label % dict(r) for r in records]'
p270
sI423
S'        else:'
p271
sI424
S'            self.labels = [self.label(r) for r in records]'
p272
sI425
S''
sI426
S'    def options(self):'
p273
sI427
S'        self.build_set()'
p274
sI428
S'        items = [(k, self.labels[i]) for (i, k) in enumerate(self.theset)]'
p275
sI429
S'        if self.sort:'
p276
sI430
S'            items.sort(options_sorter)'
p277
sI431
S'        if self.zero != None and not self.multiple:'
p278
ssg119
S'(self=<gluon.validators.IS_IN_DB object>)'
p279
sg121
S'options'
p280
sa(dp281
g99
S'/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/validators.py'
p282
sg101
(dp283
S'self.dbset'
p284
S'<gluon.dal.Set object>'
p285
sS'fields'
p286
g143
sS'self'
p287
S'<gluon.validators.IS_IN_DB object>'
p288
sS'self.ktable'
p289
S"'person'"
p290
sS'self.fields'
p291
S"['person.name', 'id']"
p292
sS'self.dbset.db'
p293
S"<DAL {'auth_permission': <Table {'ALL': <gluon.d...lications/plugin_appreport/databases/sql.log'}>}>"
p294
sS'k'
S"'person.name'"
p295
ssg107
I410
sg108
(dp296
I405
S''
sI406
S'    def build_set(self):'
p297
sI407
S"        if self.fields == 'all':"
p298
sI408
S'            fields = [f for f in self.dbset.db[self.ktable]]'
p299
sI409
S'        else:'
p300
sI410
S'            fields = [self.dbset.db[self.ktable][k] for k in self.fields]'
p301
sI411
S"        if self.dbset.db._dbname != 'gae':"
p302
sI412
S'            orderby = self.orderby or reduce(lambda a,b:a|b,fields)'
p303
sI413
S'            groupby = self.groupby'
p304
sI414
S'            dd = dict(orderby=orderby, groupby=groupby, cache=self.cache)'
p305
ssg119
S'(self=<gluon.validators.IS_IN_DB object>)'
p306
sg121
S'build_set'
p307
sa(dp308
g99
S'/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/dal.py'
p309
sg101
(dp310
S'builtinstr'
p311
S"<type 'str'>"
p312
sS'self'
p313
S"<Table {'ALL': <gluon.dal.SQLALL object at 0x9c2...c>, 'id': <gluon.dal.Field object at 0x9c2cdec>}>"
p314
sS'dict.__getitem__'
p315
S"<method '__getitem__' of 'dict' objects>"
p316
sS'key'
p317
S"'person.name'"
p318
sS'builtindict'
p319
S"<type 'dict'>"
p320
ssg107
I3806
sg108
(dp321
I3808
S'    def __call__(self, key=DEFAULT, **kwargs):'
p322
sI3809
S'        if key!=DEFAULT:'
p323
sI3810
S'            if isinstance(key, Query):'
p324
sI3801
S'                return rows[0]'
p325
sI3802
S'            return None'
p326
sI3803
S'        elif str(key).isdigit():'
p327
sI3804
S'            return self._db(self.id == key).select(limitby=(0,1)).first()'
p328
sI3805
S'        elif key:'
p329
sI3806
S'            return dict.__getitem__(self, str(key))'
p330
sI3807
S''
ssg119
S"(self=<Table {'ALL': <gluon.dal.SQLALL object at 0x9c2...c>, 'id': <gluon.dal.Field object at 0x9c2cdec>}>, key='person.name')"
p331
sg121
g19
sasS'pyver'
p332
S'Python 2.6.6: /usr/bin/python'
p333
sS'session'
p334
(dp335
S'_formkey[person/None]'
p336
S"'0b3cf4c9-ce6d-4a5a-a8fb-10f9c08c9210'"
p337
sS'_formkey[default]'
p338
S"'4700f4cf-9e57-408b-8ebd-5a59fee5b012'"
p339
sS'auth'
p340
S'None'
p341
ssS'etype'
p342
S"<type 'exceptions.KeyError'>"
p343
sS'date'
p344
S'Tue Jan 25 23:39:44 2011'
p345
sS'response'
p346
(dp347
S'status'
p348
S'200'
p349
sg59
S'<cStringIO.StringO object>'
p350
sg76
S"<SimpleCookie: session_id_plugin_appreport='127.0.0.1-56d0272b-4d25-4fdb-bf2c-da2c92731bad'>"
p351
sS'_vars'
p352
S'None'
p353
sS'title'
p354
S"'Plugin appreport'"
p355
sS'session_file'
p356
S"<open file '/home/lucasdavila/central/ws/web2py/...6d0272b-4d25-4fdb-bf2c-da2c92731bad', mode 'rb+'>"
p357
sS'flash'
p358
S"''"
p359
sS'_custom_rollback'
p360
S'None'
p361
sS'session_id'
p362
S"'127.0.0.1-56d0272b-4d25-4fdb-bf2c-da2c92731bad'"
p363
sS'headers'
p364
S"<Storage {'Expires': 'Wed, 26 Jan 2011 01:39:44 ...he, must-revalidate, post-check=0, pre-check=0'}>"
p365
sS'meta'
p366
S"<Storage {'keywords': 'web2py, python, framework... 'Web2py Enterprise Framework', 'author': 'you'}>"
p367
sS'session_filename'
p368
S"'/home/lucasdavila/central/ws/web2py/src/web2pyde...ns/127.0.0.1-56d0272b-4d25-4fdb-bf2c-da2c92731bad'"
p369
sS'postprocessing'
p370
S'[]'
p371
sS'menu'
p372
S"[(<lazyT 'Home'>, False, <gluon.html.XML object>, []), (<lazyT 'Files'>, False, <gluon.html.XML object>, [('person', False, <gluon.html.XML object>)]), (<lazyT 'Repors'>, False, <gluon.html.XML object>, [('Simple', False, <gluon.html.XML object>), ('Custon', False, <gluon.html.XML object>), ('Complex', False, <gluon.html.XML object>)]), (<lazyT 'About'>, False, <gluon.html.XML object>, [])]"
p373
sS'_view_environment'
p374
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, 'CRYPT': <class 'gluon.validators.CRYPT'>, ...}"
p375
sS'subtitle'
p376
S"<lazyT 'customize me!'>"
p377
sS'session_id_name'
p378
S"'session_id_plugin_appreport'"
p379
sS'_custom_commit'
p380
S'None'
p381
sS'_caller'
p382
S'<function <lambda>>'
p383
sS'files'
p384
S'[]'
p385
sS'view'
p386
S"'person/create.html'"
p387
ssS'locals'
p388
(dp389
S'self'
p390
S"<Table {'ALL': <gluon.dal.SQLALL object at 0x9c2...c>, 'id': <gluon.dal.Field object at 0x9c2cdec>}>"
p391
sS'key'
p392
S"'person.name'"
p393
sssS'traceback'
p394
S'Traceback (most recent call last):\n  File "/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/restricted.py", line 188, in restricted\n    exec ccode in environment\n  File "/home/lucasdavila/central/ws/web2py/src/web2pydev/applications/plugin_appreport/controllers/person.py", line 59, in <module>\n  File "/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/globals.py", line 95, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/lucasdavila/central/ws/web2py/src/web2pydev/applications/plugin_appreport/controllers/person.py", line 6, in create\n    form_favs = crud.create(favorite_music)\n  File "/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/tools.py", line 2911, in create\n    deletable=False,\n  File "/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/tools.py", line 2827, in update\n    formstyle=self.settings.formstyle\n  File "/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/sqlhtml.py", line 808, in __init__\n    inp = self.widgets.options.widget(field, default)\n  File "/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/sqlhtml.py", line 206, in widget\n    options = requires[0].options()\n  File "/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/validators.py", line 427, in options\n    self.build_set()\n  File "/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/validators.py", line 410, in build_set\n    fields = [self.dbset.db[self.ktable][k] for k in self.fields]\n  File "/home/lucasdavila/central/ws/web2py/src/web2pydev/gluon/dal.py", line 3806, in __getitem__\n    return dict.__getitem__(self, str(key))\nKeyError: \'person.name\'\n'
p395
s.